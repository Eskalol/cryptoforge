swagger: "2.0"
info:
  version: "0.0.1"
  title: Crypto Forge API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json


securityDefinitions:
  jwt:
    type: apiKey
    name: "Authorization"
    in: header


paths:
  /miner/organization/{organizationId}:
    x-swagger-router-controller: miner
    get:
      description: Gets all miners within an organization
      operationId: indexMiner
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: organizationId
          in: path
          description: id of organization
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MinersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      description: Creates a new miner within an organization
      operationId: createMiner
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: organizationId
          in: path
          description: id of organization
          required: true
          type: string
        - in: body
          name: body
          description: miner data
          required: true
          schema:
            $ref: "#/definitions/Miner"
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MinerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  
  /miner/{id}:
    x-swagger-router-controller: miner
    put:
      description: Updates a miner
      operationId: upsertMiner
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: id
          in: path
          description: id of miner
          required: true
          type: string
        - in: body
          name: body
          description: miner data
          required: true
          schema:
            $ref: "#/definitions/Miner"
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MinerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
            
    delete:
      description: Updates a miner
      operationId: destroyMiner
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: id
          in: path
          description: id of miner
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
            
  /organization/invite/{organizationId}/accept:
    x-swagger-router-controller: organizationInvite
    get:
      description: Request user accepts an invitation for an organization.
      operationId: acceptInvite
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: organizationId
          in: path
          description: id of organization
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref:
              '#/definitions/ErrorResponse'
  
  /organization/invite/{organizationId}/destroy:
    x-swagger-router-controller: organizationInvite
    delete:
      description: Request user deletes an invitation from an organization.
      operationId: destroyInvite
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: organizationId
          in: path
          description: id of organization
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref:
              '#/definitions/SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref:
              '#/definitions/ErrorResponse'
  
  /organization/invite:
    x-swagger-router-controller: organizationInvite
    get:
      description: Gets a list of all invites
      operationId: indexInvites
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/OrganizationInvites"
          "401":
            description: Unauthorized
            schema:
              $ref: "#/definitions/ErrorResponse"
          "403":
            description: Forbidden
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: error
            schema:
              $ref: "#/definitions/ErrorResponse"
    
    post:
      description: Invites a user to an organization
      operationId: createInvite
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - in: body
          name: body
          description: email and organization id
          required: true
          schema:
            $ref: "#/definitions/OrganizationInvite"
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /organization/{id}:
    x-swagger-router-controller: organization
    get:
      description: Gets a specific organization
      operationId: showOrganization
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - name: id
          in: path
          description: id of organization
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrganizationResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /organization:
    x-swagger-router-controller: organization
    get:
      description: Gets a list of organizations which request user is part of
      operationId: indexOrganization
      security:
      - jwt: []
      x-security-scope:
        - admin
        - user
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/OrganizationsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    post:
      description: Create a new organization
      operationId: createOrganization
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      parameters:
        - in: body
          name: body
          description: Organization data
          required: true
          schema:
            $ref: "#/definitions/Organization"
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/OrganizationResponse'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /user/me:
    x-swagger-router-controller: user
    put:
      description: change username or password
      operationId: upsertUserMe
      security:
        - jwt: []
      x-security-scope:
        - user
        - admin
      parameters:
        - in: body
          name: body
          description: email and password
          schema:
            $ref: "#/definitions/UserEmailPassword"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"

    get:
      description: Get information about request user
      operationId: showUserMe
      security:
        - jwt: []
      x-security-scope:
        - user
        - admin
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/{id}:
    x-swagger-router-controller: user
    get:
      description: Returns a specific user
      operationId: showUser
      security:
        - jwt: []
      x-security-scope:
        - user
        - admin
      parameters:
        - name: id
          in: path
          description: id of user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: deletes a user
      operationId: destroyUser
      security:
        - jwt: []
      x-security-scope:
        - admin
      parameters:
        - name: id
          in: path
          description: id of the user to delete
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user:
    x-swagger-router-controller: user
    get:
      description: Returns a list of all users
      operationId: indexUser
      security:
        - jwt: []
      x-security-scope:
        - admin
        - user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: Creates a User
      operationId: createUser
      parameters:
        - in: body
          name: body
          description: user informaton create user
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/AuthTokenResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /auth/login:
    x-swagger-router-controller: auth
    post:
      description: login api for obtaining jwt
      operationId: login
      parameters:
        - in: body
          name: body
          description: user name and password
          required: true
          schema:
            $ref: "#/definitions/AuthLogin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AuthTokenResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
    OrganizationResponse:
      required:
        - _id
        - name
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        email:
          type: string
        url:
          type: string
  
    MinerResponse:
      required:
        - _id
        - name
        - organization
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        organization:
          type: string
  
    MinersResponse:
      type: array
      items:
        $ref: "#/definitions/MinerResponse"
    
    OrganizationsResponse:
      type: array
      items:
        $ref: "#/definitions/Organization"

    UserListResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          name:
            type: string
          email:
            type: string
          role:
            type: string
  
    UserResponse:
      required:
        - _id
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
    
    PatchRequest:
      type: array
      items:
        $ref: "#/definitions/PatchDocument"
  
    PatchDocument:
      description: A JSONPatch document as defined by RFC 6902
      required:
       - "op"
       - "path"
      properties:
       op:
        type: string
        description: The operation to be performed
        enum:
         - "add"
         - "remove"
         - "replace"
         - "move"
         - "copy"
         - "test"
       path:
        type: string
        description: A JSON-Pointer
       value:
        type: object
        description: The value to be used within the operations.
       from:
        type: string
        description: A string containing a JSON Pointer value.
    
    OrganizationInvites:
      title: List of organization invites
      type: array
      items:
        $ref: '#/definitions/OrganizationInvite'
    
    Organization:        
      title: An organization
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string
        email:
          type: string
        url:
          type: string
    
    OrganizationInvite:
      title: An invite to an organization
      type: object
      required:
        - email
        - organization
      properties:
        email:
          type: string
        organization:
          type: string
          
    Miner:
      title: A miner
      type: object
      required:
        - name
        - organization
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string
        organization:
          type: string
    
    User:
      title: A user
      type: object
      required:
        - email
        - password
        - name
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
  
    UserEmailPassword:
      title: email and password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
  
    AuthLogin:
      title: login
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
           type: string
    
    AuthTokenResponse:
      description: jwt token
      required:
        - token
      properties:
        token:
          type: string
          
    ErrorResponse:
      required:
        - message
      properties:
        message:
          type: string
  
    SuccessResponse:
      required:
        - message
      properties:
        message:
          type: string
